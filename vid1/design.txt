let mk = new MK();

ich will dass mks gelinkt sind genauso wie bei vid0 aber halt sauber!
ich will dass mks genamed sind genauso wie in vid0 aber halt CLEAN!!!
ich will dass mks sehr leicht un conveniently gezeichnet werden koennen, wie in vid0
ich will dass mks interaktiv sind

ich will dass zoom ordentlich funktioniert!!!

MKMan macht naming und linking:
destroy whenever object is removed

each and every possible presentation MUST go through behaviors!

behavior to present board:
obj_type == 'board' makeBoard(oid,o,shape,areaName)
makeboard macht nur das board und empty shapes fuer f,e,c: z-Index ist wichtig!
obj_type == 'hex' schreibt num in mitte und gibt color
obj_type == 'edge' 

obj_type == 'gamePlayer' 
makeHand(pid, pl.buildings.

theoretisch koennte ja ein player ein board haben
zB in Nations
pl.civ hat eine 'map' ist also ein board

auch ein field koennte ein board sein:
table[0]={obj_type:'hex',content:{_obj:145}}

jedes object hat eine location (entweder area oder anderes object) und ist selbst eine location

jede player property ist ein object!

pl.buildings={farms:[[{_obj:100}]]}












______________________________objects
beispiel: 
players.White.hands = [[1,2,3],[4,5,6]]

table = {12:{buildings:{farms:[[1,2,3],[4,5,6]],palace:[],estate:[[12,13,14]]}},...}
table.12 = {buildings:{farms:[[1,2,3],[4,5,6]],palace:[],estate:[[12,13,14]]},...}
table.12.buildings = {farms:[[1,2,3],[4,5,6]],palace:[],estate:[[12,13,14]]}
table.12.buildings.farms.1 = [4,5,6]
table.12.buildings.farms.1.0 = 4

players.Red.civ.wonders = [{_obj:3},{_obj:21}]

[1,2,3] = {0:1,1:2,2:3} ... al list can be represented as dictionary
a dictionary is a key:value mapping
a key is a location, a value is a content
but it could also be:
table.34 = {obj_type:robber, loc:0} ... here the value is a location

a property is a key,value pair
value can again be anything

how can developer actually tell what to present and how?????

board is a location with multiple locations

can I distinguish location and content?
yes, I can

a location is basically a position or region: can be visible or not
location only tells the user where to put some content

board should really only be a bunch of locations

a location is like an address

therefore it is like a sequence of keys it actually is the LHS
the RHS is the content

for rsg the interesting info would be WHERE (location,address) should I put WHAT (content)
and also WHEN (condition)

foreach behavior in CONDS
 todo = eval(behavior)
 if todo
  eval(todo)

there are only 2 ways to do it:
1. every single round present entire thing: this is the way mabi is doing it
2. only present changes: but problem: change can be deeply nested in there

hab mich derzeit fuer 1. variante entschieden, weil ich daraus immer noch 2te variante machen kann

createBoard: only calcs addresses
visualizeBoard: actually makes objects for addresses
easily could imagine a game where not every field is an object
rather, only pieces are represented!
eg.: 
table:{{whiteKing:E3,blackKnight:D4,...}}
still I want to visualize a chess board!
createHand
visualizeHand


































